"""add cascading deletion

Revision ID: 515f1a65cabd
Revises: 827f86d829de
Create Date: 2024-01-09 18:02:18.224279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "515f1a65cabd"
down_revision: Union[str, None] = "827f86d829de"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("comments_post_id_fkey", "comments", type_="foreignkey")
    op.drop_constraint("comments_author_id_fkey", "comments", type_="foreignkey")
    op.create_foreign_key(
        None, "comments", "authors", ["author_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "comments", "posts", ["post_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("likes_post_id_fkey", "likes", type_="foreignkey")
    op.drop_constraint("likes_author_id_fkey", "likes", type_="foreignkey")
    op.create_foreign_key(
        None, "likes", "posts", ["post_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "likes", "authors", ["author_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column(
        "posts",
        "topic_id",
        existing_type=sa.UUID(),
        nullable=True,
        existing_comment="id темы",
    )
    op.drop_constraint("posts_author_id_fkey", "posts", type_="foreignkey")
    op.drop_constraint("posts_topic_id_fkey", "posts", type_="foreignkey")
    op.create_foreign_key(
        None, "posts", "authors", ["author_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "posts", "topics", ["topic_id"], ["id"], ondelete="SET NULL"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "posts", type_="foreignkey")
    op.drop_constraint(None, "posts", type_="foreignkey")
    op.create_foreign_key("posts_topic_id_fkey", "posts", "topics", ["topic_id"], ["id"])
    op.create_foreign_key(
        "posts_author_id_fkey", "posts", "authors", ["author_id"], ["id"]
    )
    op.alter_column(
        "posts",
        "topic_id",
        existing_type=sa.UUID(),
        nullable=False,
        existing_comment="id темы",
    )
    op.drop_constraint(None, "likes", type_="foreignkey")
    op.drop_constraint(None, "likes", type_="foreignkey")
    op.create_foreign_key(
        "likes_author_id_fkey", "likes", "authors", ["author_id"], ["id"]
    )
    op.create_foreign_key("likes_post_id_fkey", "likes", "posts", ["post_id"], ["id"])
    op.drop_constraint(None, "comments", type_="foreignkey")
    op.drop_constraint(None, "comments", type_="foreignkey")
    op.create_foreign_key(
        "comments_author_id_fkey", "comments", "authors", ["author_id"], ["id"]
    )
    op.create_foreign_key(
        "comments_post_id_fkey", "comments", "posts", ["post_id"], ["id"]
    )
    # ### end Alembic commands ###
